// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  userId       String
  name         String
  email        String?  @unique
  subscription String?
  deptartment  String?
  role         Role     @default(User)
  isAdmin      Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  Ticket       Ticket[]
  Note         Note[]
}

model Ticket {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String?
  description String?
  status      Status   @default(Pending)
  summary     String?
  priority    String?  @default("Standard")
  assignedTo  User?    @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  userId String? @db.ObjectId
  Call   Call?   @relation(fields: [callId], references: [id])
  callId String? @db.ObjectId
  Note   Note[]
}

model Call {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  callId       String    @unique
  startTime    DateTime?
  endTime      DateTime?
  record       Boolean?
  recordingUrl String?
  length       String?
  callerName   String?
  callerPhone  String?
  callerEmail  String?
  completed    Boolean
  summary      String?
  to           String?
  from         String?
  transcripts  String?
  notes        String?
  ticket       Ticket[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Note {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  content     String
  createdBy   User?   @relation(fields: [userId], references: [id])
  ticket      Ticket? @relation(fields: [ticketId], references: [id])
  ticketId    String  @db.ObjectId
  creatorName String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String? @db.ObjectId
}

enum Role {
  Agent
  Admin
  User
}

enum Status {
  Pending
  Unassigned
  Resolved
  Closed
}
